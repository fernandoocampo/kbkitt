Key: motogp-twitter
Value: https://x.com/MotoGP
Notes: First on the throttle, last on the brakes
Category: bookmark
Reference: motogp twitter
Namespace: default
Tags:
    - motogp
    - motorcycles
    - twitter
    - account
    - bookmark
---
Key: stateful firewall
Value: allows the return traffic automatically
Notes: in aws cloud used by security groups
Category: concept
Reference: aws
Namespace: default
Tags:
    - security
    - aws
    - firewall
    - stateful
    - traffic
---
Key: stateless firewall
Value: checks for an allow rule for both connections in/out
Notes: ACLs in AWS you need inbound and outbound rules even for same connection
Category: concept
Reference: aws
Namespace: default
Tags:
    - security
    - aws
    - firewall
    - stateless
    - acls
    - traffic
---
Key: p2p network
Value: there's no central master or server node coordinating them
Notes: ethereum network is a p2p network
Category: concept
Reference: ethereum
Namespace: default
Tags:
    - blockchain
    - ethereum
    - peer-to-peer
    - network
---
Key: coupling
Value: when we say that coupling is bad, what we usually imply is that we have to change those two components simultaneously. For example, you want to change one of them, but then you’re forced to apply a corresponding change to the second component.
Notes: coupling as part of system design
Category: concept
Reference: Vladik Khononov at techleadjournal
Namespace: default
Tags:
    - coupling
    - design
    - vladik
---
Key: cynefin framework
Value: is a conceptual framework used to aid decision-making. Cynefin offers five decision-making contexts or "domains". obvious, complicated, complex, chaotic, and confusion.
Notes: that help managers to identify how they perceive situations and make sense of their own and other people's behaviour.
Category: concept
Reference: Dave Snowden
Namespace: default
Tags:
    - cynefin
    - framework
    - decision
---
Key: cynefin obvious
Value: If I know exactly what the effect of that change is going to be, then that code base is not complex. It’s probably simple.
Notes: That’s why this domain, in Cynefin terms, is called clear. It’s something that is simple, clear. If I am making a change, I know what’s going to happen.
Category: concept
Reference: vladik khononov
Namespace: default
Tags:
    - cynefin
    - framework
    - clear
    - obvious
    - decision
---
Key: lead time
Value: the difference between when an item is defined and done
Notes: metrics
Category: concept
Reference: vaughn vernon
Namespace: default
Tags:
    - lifecycle
    - metrics
    - lead
    - time
---
Key: cycle time
Value: the difference between when an item is in progress and done
Notes: metrics
Category: concept
Reference: vaughn vernon
Namespace: default
Tags:
    - lifecycle
    - metrics
    - time
    - work
---
Key: program testing
Value: Program testing can be a very effective way to show the presence of bugs, but it is hopelessly inadequate for showing their absence
Notes: programming test thoughs
Category: quote
Reference: Edsger W. Dijkstra
Namespace: default
Tags:
    - dijkstra
    - testing
    - quote
    - bugs
---
Key: correctness
Value: it is the extent to which our code does what we intend it to do
Notes: correctness in our programs
Category: concept
Reference: rust book
Namespace: default
Tags:
    - correctness
    - programming
    - development
---
Key: netshoot command
Value: kubectl run tmp-shell-fo --rm -i --tty --image nicolaka/netshoot
Notes: create a temporal pod to run network commands
Category: command
Reference: network
Namespace: default
Tags:
    - network
    - netshoot
    - nicolaka
    - dig-short
    - kubernetes
---
Key: terraform rm
Value: terraform state rm "<path>"
Notes: to remove specific resource from terraform state
Category: command
Reference: terraform
Namespace: default
Tags:
    - terraform
    - remove
    - state
    - resource
---
Key: aristoteles-1
Value: The purpose of knowledge is action, not knowledge
Notes: ""
Category: quote
Reference: aristotle
Namespace: default
Tags:
    - quote
    - knowledge
    - aristotle
    - artistoteles
---
Key: zero-overhead
Value: What you dont use, you dont pay for. And further What you do use, you couldn’t hand code any better.
Notes: In general, C++ implementations obey the zero-overhead principle
Category: concept
Reference: Bjarne Stroustrup
Namespace: default
Tags:
    - overhead
    - principle
    - quote
    - implementation
---
Key: lsof
Value: lsof -i :3000
Notes: |
    command to list open files.
    i: selects the listing of files any of whose Internet address matches the address specified in i
Category: command
Reference: ""
Namespace: default
Tags:
    - linux
    - command
    - list
    - open
    - files
---
Key: grep-with-lines
Value: grep -A5 -B5 lender
Notes: file pattern searcher. 5 lineas after the word and 5 line Before word
Category: command
Reference: ""
Namespace: default
Tags:
    - linux
    - command
    - grep
    - file
    - pattern
    - search
    - lines
---
Key: casco-quote
Value: El casco esconde sentimientos que no se pueden entender
Notes: ""
Category: quote
Reference: Airton Sena
Namespace: default
Tags:
    - helmet
    - casco
    - quote
    - sena
    - pilot
    - formula
---
Key: alone-quote
Value: The man who goes alone can start today; but he who travels with another must wait till that other is ready
Notes: ""
Category: quote
Reference: Henry David Thoreau
Namespace: default
Tags:
    - alone
    - quote
    - travel
    - ready
---
Key: best-of-breed systems
Value: The problem with end-to-end systems is that, because they do everything, there are better systems available for each thing that they do
Notes: How machine learning applies to your business
Category: quote
Reference: ""
Namespace: default
Tags:
    - breed
    - system
    - machine
    - learning
    - quote

---
Key: solow paradox
Value: You can see the computer age everywhere but in the productivity statistics
Notes: If computers were really helping us become more productive, why is it that much faster computers don’t lead to much greater productivity?
Category: quote
Reference: Robert Solow
Namespace: default
Tags:
    - solow
    - paradox
    - quote
    - productive
    - computer
    - machine
    - learning
---
Key: ml-quote
Value: Any point in a process where a person needs to make a decision is an opportunity to use machine learning to automate the decision or to present a restricted choice of options for the person to consider.
Notes: ""
Category: quote
Reference: How machine learning applies to your business
Namespace: default
Tags:
    - machine
    - learning
    - decision
    - opportunity
    - automation
    - quote
---
Key: target variable
Value: person's decision about something in machine learning. Categorical and Continuous.
Notes: In machine learning lingo, Person’s decision is called the target variable, and the types of things she considers when making the decision are called features.
Category: concept
Reference: How machine learning applies to your business
Namespace: default
Tags:
    - machine
    - learning
    - decision
    - target
    - concept
---
Key: categorical target variable
Value: include things like yes or no; and north, south, east, or west.
Notes: ""
Category: concept
Reference: How machine learning applies to your business
Namespace: default
Tags:
    - machine
    - learning
    - variable
    - categoricla
    - target
    - concept
---
Key: binary target variable
Value: categorical target variable with two only possible variables
Notes: ""
Category: concept
Reference: How machine learning applies to your business
Namespace: default
Tags:
    - machine
    - learning
    - concept
    - categorical
    - binary
    - target
    - variable
---
Key: multiclass target variable
Value: categorical target variable with more than two variables
Notes: ""
Category: concept
Reference: How machine learning applies to your business
Namespace: default
Tags:
    - machine
    - learning
    - concept
    - categorical
    - multiclass
    - target
    - variable
---
Key: Continuous target variable
Value: it is just numbers. if your machine learning application predicts number values based on features.
Notes: ""
Category: concept
Reference: How machine learning applies to your business
Namespace: default
Tags:
    - machine
    - learning
    - continuous
    - variable
    - target
    - concept
---
Key: ML Features
Value: the columns of the table. The features may be size, name, type, weight, and so on. This is what describes our data. Certain features are special, though, and we call them labels.
Notes: ""
Category: concept
Reference: Grokking Machine Learning
Namespace: default
Tags:
    - machine
    - learning
    - features
    - concept
---
Key: Supervised machine learning
Value: type of machine learning. it is a type of predictive machine learning in which the data comes with labels, where the label is the target we are interested in predicting. Remember-Formulate-Predict.
Notes: The model first remembers the dataset of dogs and cats, then formulates a model, or a rule for what is a dog and what is a cat, and when a new image comes in, the model makes a prediction about what the label of the image is, namely, is it a dog or a cat.
Category: concept
Reference: Grokking Machine Learning
Namespace: default
Tags:
    - machine
    - learning
    - supervised
    - concept
---
Key: Unsupervised machine learning
Value: It differs from supervised learning in that the data has no labels. it is a dataset with only features, and no target to predict. It is where we point a machine learning application at a bunch of data and tell it to do its thing.
Notes: ""
Category: concept
Reference: Grokking Machine Learning
Namespace: default
Tags:
    - machine
    - learning
    - unsupervised
    - concept
---
Key: Regression Models
Value: These are the types of models that predict a number, such as the weight of the animal
Notes: ""
Category: concept
Reference: Grokking Machine Learning
Namespace: default
Tags:
    - machine
    - learning
    - supervised
    - concept
---
Key: Classification Models
Value: These are the types of models that predict a state, such as the type of animal (cat or dog).
Notes: ""
Category: concept
Reference: Grokking Machine Learning
Namespace: default
Tags:
    - machine
    - learning
    - supervised
    - concept
---
Key: ML Annotation
Value: the process of labeling raw data so that it becomes training data for Machine Learning
Notes: ""
Category: concept
Reference: Human in the loop
Namespace: default
Tags:
    - machine
    - learning
    - annotation
    - concept
---
Key: borrowing
Value: We call the action of creating a reference borrowing.
Notes: As in real life, if a person owns something, you can borrow it from them. When you’re done, you have to give it back. You don’t own it.
Category: concept
Reference: rust book
Namespace: default
Tags:
    - rust
    - borrowing
    - reference
    - programming
    - idiomatic
---
Key: ownership
Value: set of rules that govern how a Rust program manages memory
Notes: 'Rust uses a third approach: memory is managed through a system of ownership with a set of rules that the compiler checks.'
Category: concept
Reference: rust book
Namespace: default
Tags:
    - rust
    - ownership
    - rules
    - idiomatic
---
Key: ownership rules
Value: 1. Each value in Rust has an owner. 2. There can only be one owner at a time. 3. When the owner goes out of scope, the value will be dropped.
Notes: ""
Category: concept
Reference: rust book
Namespace: default
Tags:
    - rust
    - ownership
    - rules
    - idiomatic
---
Key: stack memory
Value: part of memory available to your code to use at runtime. All data stored on the stack must have a known, fixed size.
Notes: The stack stores values in the order it gets them and removes the values in the opposite order (FIFO).
Category: concept
Reference: rust book
Namespace: default
Tags:
    - memory
    - stack
    - programming
---
Key: heap memory
Value: 'The heap is less organized: when you put data on the heap, you request a certain amount of space. The memory allocator finds an empty spot in the heap that is big enough, marks it as being in use, and returns a pointer, which is the address of that location.'
Notes: This process is called allocating on the heap and is sometimes abbreviated as just allocating (pushing values onto the stack is not considered allocating). Because the pointer to the heap is a known, fixed size, you can store the pointer on the stack, but when you want the actual data, you must follow the pointer.
Category: concept
Reference: rust book
Namespace: default
Tags:
    - heap
    - memory
    - rust
    - programming
---
Key: concurrent programming
Value: where different parts of a program execute independently
Notes: ""
Category: concept
Reference: ""
Namespace: default
Tags:
    - concurrency
    - programming
    - parallel
---
Key: parallel programming
Value: where different parts of a program execute at the same time
Notes: ""
Category: concept
Reference: ""
Namespace: default
Tags:
    - parallel
    - programming
    - concurrency

---
Key: design patterns
Value: poweful abstractions that every programmer can use  to produce high quality code.
Notes: 'Humans are good at pattern recognition, and following well understood and easily recognized patterns helps us solve 2 tricky problems: reasoning about whether a design is good or bad amd help other people understand our code'
Category: concept
Reference: idiomatic rust
Namespace: default
Tags:
    - patterns
    - design
    - software
    - principles
---
Key: JWK
Value: The JSON Web Key Set (JWKS) is a set of keys which contains the public keys used to verify any JSON Web Token (JWT) issued by the authorization server and signed using the RS256 signing algorithm.
Notes: ""
Category: concept
Reference: jwt
Namespace: default
Tags:
    - token
    - keyset
    - keys
    - json
---
Key: oh-my-zsh-git-shortcuts
Value: https://kapeli.com/cheat_sheets/Oh-My-Zsh_Git.docset/Contents/Resources/Documents/index
Notes: Enjoy this cheat sheet at its fullest within Dash, the macOS documentation browser.
Category: bookmark
Reference: zsh+git
Namespace: default
Tags:
    - oh-my-zsh
    - shortcuts
    - bookmark
    - cheat
    - sheet
    - git
---
Key: oauth2-proxy
Value: https://github.com/oauth2-proxy/oauth2-proxy
Notes: A reverse proxy and static file server that provides authentication using Providers (Google, Keycloak, GitHub and others) to validate accounts by email, domain or group.
Category: bookmark
Reference: uas epic proxy
Namespace: default
Tags:
    - proxy
    - oauth2
    - identity
    - authentication
    - sidecar
---
Key: testdata
Value: https://dave.cheney.net/2016/05/10/test-fixtures-in-go
Notes: the Go tool will ignore any directory in your $GOPATH that starts with a period, an underscore, or matches the word testdata.
Category: bookmark
Reference: dave cheney
Namespace: default
Tags:
    - golang
    - testdata
    - fixtures
    - cheney
    - tests
---
Key: podman-multi-arch-build
Value: https://blog.while-true-do.io/podman-multi-arch-images/
Notes: Have you built a container image on your workstation, just to find out that it doesn't work on your Raspberry Pi? Maybe your project considers publishing a software for arm64 and amd64, so your users can run it on different platforms? No worries, Podman got you covered! With multi-arch builds, you can build your image once and run them on multiple platforms.
Category: bookmark
Reference: Daniel Schier
Namespace: default
Tags:
    - podman
    - build
    - images
    - multiarch
    - docker
---
Key: obansajo-vision
Value: I’ve found more durable is being clear on what problems you are solving, why the problem is important and how you’ll do it. Strategy.
Notes: A lot of leadership teams spend time creating mission, vision and values statements which are ignored almost as soon as they’re created.
Category: quote
Reference: dare obansajo
Namespace: default
Tags:
    - vision
    - mission
    - values
    - statements
    - strategy
---
Key: Dare Obansajo
Value: '@Carnage4Life'
Notes: Opinions about product management, technology news and inclusivity in tech. Diversity is about demographics, inclusion is about creating a sense of belonging.
Category: influencer
Reference: twitter
Namespace: default
Tags:
    - dare
    - obansajo
    - influencer
    - author
    - twitter
---
Key: Grady Booch
Value: '@Grady_Booch'
Notes: scientist, storyteller, philosopher
Category: influencer
Reference: Grady Booch
Namespace: default
Tags:
    - grady
    - booch
    - twitter
    - umls
    - scientist
---
Key: Allen Holub
Value: '@allenholub'
Notes: I help ppl build software better
Category: influencer
Reference: twitter
Namespace: default
Tags:
    - allen
    - holub
    - agile
    - software
---
Key: vault-login-oidc
Value: VAULT_ADDR=https://{VAULT_HOST}/ vault login -method=oidc
Notes: login against vault
Category: command
Reference: vault
Namespace: default
Tags:
    - vault
    - login
    - oidc
    - authentication
---
Key: terraform-destroy-target
Value: terraform destroy --target "{MODULE_OR_RESOURCE_TO_DESTROY}"
Notes: To destroy a specific EC2 instance (demo_vm_1), the --target argument can be supplied to the destroy command with the resource path to identify the correct. terraform destroy --target aws_instance.demo_vm_1
Category: command
Reference: https://spacelift.io/blog/how-to-destroy-terraform-resources
Namespace: default
Tags:
    - terraform
    - destroy
    - target
    - command
---
Key: future-tools-ai
Value: https://www.futuretools.io
Notes: FutureTools Collects & Organizes All The Best AI Tools So YOU Too Can Become Superhuman!
Category: bookmark
Reference: internet
Namespace: default
Tags:
    - tools
    - artificial
    - intelligence
    - ai
    - future
---
Key: operators handbook
Value: https://www.operatorshandbook.com
Notes: My goal with this newsletter is to provide you with actionable advice, frameworks and guides to grow your career and your business based on my experience as an operator over the last 10 years at companies like Uber, Meta and Rippling.
Category: bookmark
Reference: internet
Namespace: default
Tags:
    - handbook
    - advice
    - guidelines
    - grow
    - career
    - operator
---
Key: sematic-release
Value: https://semantic-release.gitbook.io/semantic-release
Notes: 'Fully automated version management and package publishing. semantic-release automates the whole package release workflow including: determining the next version number, generating the release notes, and publishing the package. ~/Downloads/ADR 15 - Automate Semantic Release.pdf'
Category: bookmark
Reference: conventional commits
Namespace: default
Tags:
    - semantic
    - release
    - version
    - notes
---
Key: conventional-commits
Value: https://www.conventionalcommits.org/
Notes: The Conventional Commits specification is a lightweight convention on top of commit messages. It provides an easy set of rules for creating an explicit commit history; which makes it easier to write automated tools on top of. This convention dovetails with SemVer, by describing the features, fixes, and breaking changes made in commit messages.
Category: bookmark
Reference: conventional commits
Namespace: default
Tags:
    - conventional
    - commits
    - semver
    - changes
    - messages
---
Key: levelupcoding
Value: '@LevelUpCoding_'
Notes: Level up your engineering & system design skills. Complex topics simplified.
Category: influencer
Reference: https://x.com/LevelUpCoding_
Namespace: default
Tags:
    - twitter
    - levelup
    - coding
    - complex
    - topics
    - simplified
---
Key: phuong le
Value: '@func25'
Notes: dive into untold insights of golang and system design with blog.devtrovert.com
Category: influencer
Reference: https://x.com/func25
Namespace: default
Tags:
    - golang
    - insights
    - system
    - design
    - phuong
---
Key: devtrovert
Value: https://blog.devtrovert.com
Notes: Phuong Le blog about go and system design
Category: bookmark
Reference: '@func25 at twitter'
Namespace: default
Tags:
    - golang
    - system
    - design
    - blogs
    - phuong
---
Key: git-list-files-commit
Value: git diff-tree --name-only {YOUR-COMMIT-HASH} -r
Notes: |-
    list all the files in a commit
    -r argument is to recurse into sub-trees
    --name-only argument shows only the file names that were affected
Category: command
Reference: stackoverflow
Namespace: default
Tags:
    - git
    - commit
    - list
    - files

---
Key: jwt-claims
Value: JSON web tokens (JWTs) claims are pieces of information asserted about a subject. For example, an ID token (which is always a JWT) can contain a claim called name that asserts that the name of the user authenticating is "John Doe". In a JWT, a claim appears as a name/value pair where the name is always a string and the value can be any JSON value
Notes: https://auth0.com/docs/secure/tokens/json-web-tokens/json-web-token-claims
Category: concept
Reference: auth0
Namespace: default
Tags:
    - jwt
    - token
    - json
    - claims
    - concept
---
Key: singleflight-go
Value: https://victoriametrics.com/blog/go-singleflight/index.html
Notes: The singleflight package in Go is built specifically to handle that situation when you’ve got multiple requests coming in at the same time asking for the same data, the default behavior is that each of those requests would go to the database individually to get the same information
Category: bookmark
Reference: victoriametrics
Namespace: default
Tags:
    - singleflight
    - query
    - golang
    - pattern
    - victoria
    - performance
---
Key: jetstream
Value: https://docs.nats.io/nats-concepts/jetstream
Notes: NATS has a built-in persistence engine called JetStream which enables messages to be stored and replayed at a later time. Unlike NATS Core which requires you to have an active subscription to process messages as they happen, JetStream allows the NATS server to capture messages and replay them to consumers as needed. This functionality enables a different quality of service for your NATS messages, and enables fault-tolerant and high-availability configurations.
Category: bookmark
Reference: Fabian
Namespace: default
Tags:
    - jetstream
    - events
    - subscription
    - availability
    - consumers
---
Key: learn-mlops-2024
Value: https://neptune.ai/blog/how-to-learn-mlops
Notes: With the recent rapid advancements in machine learning and its widespread application in various industries, Machine Learning Operations (MLOps for short) has become a rapidly advancing field. The recent popularity of Large Language Models (LLMs) has only accelerated this development and increased the demand for MLOps specialists.
Category: bookmark
Reference: Chauncey
Namespace: default
Tags:
    - mlops
    - learning
    - neptune
    - resources
    - courses
---
Key: mlops-repository
Value: https://github.com/raminmohammadi/MLOps
Notes: This repository is dedicated to sharing reading contents, labs and exercises for the MLOps (Machine Learning Operations) course at Northeastern University.
Category: bookmark
Reference: Chauncey
Namespace: default
Tags:
    - mlops
    - repository
    - learning
    - contents
    - exercises
    - university
---
Key: business-logic-module
Value: The business logic module is explicit and bounded. It contains what you have coded from business requirements, and importantly, your application does not contain what has not been coded. Indeed, business logic can be extended at runtime through externalization of rules, different rule engines, domain-specific languages, allowing users to code, and so on.
Notes: ""
Category: concept
Reference: epam course
Namespace: default
Tags:
    - business
    - logic
    - module
    - tier
    - design
    - concept
---
Key: business-reasoning-module
Value: allows business logic to be extended at runtime without explicit coding effort by leveraging the generative nature of Gen AI. This way, you can envision a conventional-looking application that doesn't have a chat interface anywhere. Instead, it contains a business reasoning module that considers user activities to devise solutions to a problem.
Notes: ""
Category: concept
Reference: epam training
Namespace: default
Tags:
    - business
    - reasoning
    - genai
    - generative
    - intelligence
    - design
    - module
---
Key: ccu
Value: Concurrent Users metric
Notes: This can either be in reference to number of sessions per single server instance OR the number of users participating in an experience / event at the same time.
Category: concept
Reference: load testing
Namespace: default
Tags:
    - testing
    - load
    - concurrent
    - users
    - metrics
---
Key: structured-request
Value: 'Outside the business reasoning software module, you encounter the world of code, API calls, and SDKs, which handles conventional structured content: message formats, schema definitions, and public contracts. Structured content from the outside is passed to the business reasoning module via API.'
Notes: The Inner Workings of a Business Reasoning Module
Category: concept
Reference: epam training
Namespace: default
Tags:
    - genai
    - generative
    - intelligence
    - artificial
    - structured
    - request
---
Key: no-llm-can-reason
Value: |-
    By the very nature of its architecture, no LLM can reason.

    One might see dim reflections of inductive and deductive reasoning only in so far as the training data set contains such examples, but abductive reasoning - indeed any color of reasoning that requires the production of new abstractions - is unreachable..
Notes: This is not to say that LLMs have no utility - they do - but it is to say that one should not give LLMs powers they do not and cannot possess. To think this is an AGI or even a path to AGI is folly.
Category: quote
Reference: https://x.com/Grady_Booch/status/1790085016606880001
Namespace: default
Tags:
    - grady
    - booch
    - llm
    - reasoning
    - large
    - language
    - model
    - twitter
---
Key: jwt-go-cognito
Value: https://www.angelospanag.me/blog/verifying-a-json-web-token-from-cognito-in-go-and-gin
Notes: Verifying a JSON Web Token from Amazon Cognito in Go and Gin. One popular option for integrating Amazon Cognito authentication/authorization with a backend, requires the decoding and verifying of JSON Web Tokens (JWT) for server-side processing.
Category: bookmark
Reference: internet
Namespace: default
Tags:
    - cognito
    - golang
    - jwt
    - token
    - verify
    - authentication
    - authorization
    - auth
---
Key: k8s-resource-limits
Value: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits
Notes: When Kubernetes schedules a Pod, it’s important that the containers have enough resources to actually run. If you schedule a large application on a node with limited resources, it is possible for the node to run out of memory or CPU resources and for things to stop working!
Category: bookmark
Reference: k8s resources
Namespace: default
Tags:
    - kubernetes
    - k8s
    - resources
    - limits
    - memory
    - cpu
    - google
---
Key: k8s-cpu-limits
Value: https://www.ardanlabs.com/blog/2024/02/kubernetes-cpu-limits-go.html
Notes: I believe there are many Go services running in K8s under CPU limits that are not running as efficiently as they otherwise could be. In this post, I will explain what I learned and show what happens when CPU limits are being used and your Go service isn’t configured to run within the scope of that setting.
Category: bookmark
Reference: Ardan Lab bill kennedy
Namespace: default
Tags:
    - kubernetes
    - k8s
    - cpu
    - limits
    - ardan
    - lab
    - kennedy
---
Key: k8s-memory-limits
Value: https://www.ardanlabs.com/blog/2024/02/kubernetes-memory-limits-go.html
Notes: After writing the Kubernetes (K8s) CPU Limits post, I was wondering what happens when a K8s memory limit is set for the same service. I’ve been hearing at workshops and at Ardan how people are experiencing Out Of Memory (OOM) problems with their PODs when setting K8s memory limits. I’m often told that when an OOM occurs, K8s will terminate and restart the POD.
Category: bookmark
Reference: ardan labs bill kennedy
Namespace: default
Tags:
    - kubernetes
    - k8s
    - memory
    - limits
    - ardan
    - labs
    - kennedy
---
Key: api
Value: |-
    set of definitions and protocols for building and integrating application software.
    APIs let your product or service communicate with other products and services without having to know how they’re implemented
Notes: API are gateways between services and consumers. APIs are sometimes thought of as contracts
Category: concept
Reference: api notes by russi
Namespace: default
Tags:
    - api
    - interface
    - contracts
    - integration
    - application
---
Key: effective-api-habits
Value: |-
    Apply and API-first design approach
    Choose a solid API runtime
    Create a central service repository
    Manage services through versions, policy and contracts
    Promote and socialize your APIs.
    Monitor and assess API usage.
    Continually improve.
Notes: 7 habits of highly effectives API
Category: concept
Reference: apis by russi
Namespace: default
Tags:
    - api
    - effective
    - habits
    - concept
---
Key: api-layers
Value: |-
    * system apis
    * experience apis
    * process apis
Notes: layered approach to APIs
Category: concept
Reference: apis by russi
Namespace: default
Tags:
    - layered
    - approach
    - apis
    - syste
    - experience
    - process
---
Key: system-apis
Value: "They are the APIs that expose the APIs of record.\nThey expose the data information of the assets in a very easily consumable manner. \nTypically these APIs actually are the ones that change more slowly. "
Notes: layered approach to apis
Category: concept
Reference: apis by russi
Namespace: default
Tags:
    - system
    - apis
    - layered
    - approach
    - apis
---
Key: experience-apis
Value: "* They are the ones that change at the fastest pace. That is because applications come to life at a much quicker rate than systems in the back-end. \n* They expose the data from the back-end data sources in exactly the right form for the application or devices in question that need to consume the data. "
Notes: Layered approach to APIs
Category: concept
Reference: apis by russi
Namespace: default
Tags:
    - experience
    - apis
    - layered
    - approach
    - rest
---
Key: process-apis
Value: |-
    * They are In the middleware between Experience and System APIs.
    * This is the orchestration and composition that need to take place with System APIs in order to provide that data in a new way using business logic through the Experience APIs.
Notes: Layered approach to APIs
Category: concept
Reference: apis by russi
Namespace: default
Tags:
    - process
    - apis
    - layered
    - approach
    - rest

---
Key: openapi-bookmark
Value: https://www.openapis.org
Notes: The OpenAPI Specifications provides a formal standard for describing HTTP APIs.
Category: bookmark
Reference: internet
Namespace: default
Tags:
    - openapi
    - specification
    - understand
    - documentation
    - rest
---
Key: openapi
Value: |-
    * It is an API description format for REST APIs, this is the evolution of Swagger.
    * Allows you to describe your entire API
    * API specifications can be written in YAML or JSON
    * The format is easy to learn and readable to both humans and machines.
Notes: |-
    Available endpoints (/users) and operations on each endpoint (GET /users, POST /users)
    Operation parameters Input and output for each operation
    Authentication methods
    Contact information, license, terms of use and other information.
Category: concept
Reference: apis by russi
Namespace: default
Tags:
    - opeanapi
    - apis
    - contract
    - rest
    - specification
---
Key: api-documentation
Value: https://swagger.io/blog/api-documentation/api-documentation-best-practices/?_ga=2.12203965.869733376.1654161586-1840811407.1654161586
Notes: 'API Documentation: The Secret to a Great API Developer Experience'
Category: bookmark
Reference: swagger
Namespace: default
Tags:
    - apis
    - documentation
    - practices
    - rest
    - book
---
Key: api-versioning
Value: |-
    * headers
    * URL path
    * Query string
Notes: There are different schools of thought to version your API, but most of them fall under these three categories
Category: concept
Reference: apis by russi
Namespace: default
Tags:
    - apis
    - versioning
    - headers
    - urls
    - queryparams
    - design
    - rest
---
Key: api-versioning-headers
Value: |-
    * Custom Header: Adding a custom X-API-VERSION (or any other header of choice) header key by client can be used by a service to route a request to the correct endpoint
    * Using accept header to specify your version such as
    => Accept: application/vnd.hashmapinc.v2+json
Notes: 2 ways you can specify version in headers
Category: concept
Reference: |-
    * GData-version: 2 (google)
    * application/vnd.github[.version]
Namespace: default
Tags:
    - apis
    - versioning
    - headers
    - design
    - contracts
    - rest
---
Key: api-versioning-url-path
Value: Embed the version in the URL such as POST /v2/users. This alternative gives better discoverability of a resource by looking at the URL.
Notes: |-
    * /2010-04-01/
    * /1/
    * /v1/
Category: concept
Reference: apis by russi
Namespace: default
Tags:
    - api
    - versioning
    - urls
    - paths
    - design
    - contracts
    - rest
---
Key: api-versioning-query
Value: Include a version query string parameter with the number of version to use.
Notes: e.g. ?v=2
Category: concept
Reference: apis by russi
Namespace: default
Tags:
    - apis
    - versioning
    - query
    - params
    - rest
    - design
    - contracts
---
Key: oauth2
Value: stands for “Open Authorization”, is a standard designed to allow a website or application to access resources hosted by other web apps on behalf of a user. It replaced OAuth 1.0 in 2012 and is now the de facto industry standard for online authorization. OAuth 2.0 provides consented access and restricts actions of what the client app can perform on resources on behalf of the user, without ever sharing the user's credentials.
Notes: OAuth 2.0 is an authorization protocol and NOT an authentication protocol. As such, it is designed primarily as a means of granting access to a set of resources, for example, remote APIs or user data.
Category: concept
Reference: https://auth0.com/intro-to-iam/what-is-oauth-2
Namespace: default
Tags:
    - oauth2
    - standard
    - open
    - authorization
    - protocol
---
Key: jwks-properties
Value: https://auth0.com/docs/secure/tokens/json-web-tokens/json-web-key-set-properties
Notes: Each property in the key is defined by the JWK specification RFC 7517 Section 4
Category: bookmark
Reference: auth0
Namespace: default
Tags:
    - jwks
    - properties
    - keyset
    - json
    - web
    - key
    - oauth2
---
Key: low-latency-network
Value: Low latency describes a computer network that is optimized to process a very high volume of data messages with minimal delay (latency). These networks are designed to support operations that require near real-time access to rapidly changing data.
Notes: Low latency is desirable in a wide range of use cases. In a general sense, lower latency is nearly always an improvement over slower packet transport. Low latency is desirable in online gaming as it contributes to a more realistic gaming environment. However, the term low latency is most often used to describe specific business use cases, in particular high-frequency trading in capital markets.
Category: concept
Reference: networks
Namespace: default
Tags:
    - networks
    - latency
    - optimized
    - delay
    - gaming
    - trading
    - payment
---
Key: book-bundles
Value: https://www.humblebundle.com/books
Notes: Looking for your next great read? Immerse yourself in adventurous comics, discover spectacular fantasy worlds, whip up your soon-to-be favorite recipe, run a new tabletop RPG system, and more with our curated book bundles. Whether you're a voracious reader or want to explore new genres, our exclusive bundles can help you find your next literary love. Plus, a portion of the bundle proceeds go to charity!
Category: bookmark
Reference: jorge mario chaparro
Namespace: default
Tags:
    - books
    - ecommerce
    - bundle
    - software
    - literature
    - sales
---
Key: grpc
Value: In gRPC, a client application can directly call a method on a server application on a different machine as if it were a local object, making it easier for you to create distributed applications and services. As in many RPC systems, gRPC is based around the idea of defining a service, specifying the methods that can be called remotely with their parameters and return types. On the server side, the server implements this interface and runs a gRPC server to handle client calls. On the client side, the client has a stub (referred to as just a client in some languages) that provides the same methods as the server.
Notes: gRPC can use protocol buffers as both its Interface Definition Language (IDL) and as its underlying message interchange format
Category: concept
Reference: https://grpc.io/docs/what-is-grpc/introduction/
Namespace: default
Tags:
    - grpc
    - remote
    - procedure
    - calls
    - interface
    - protocol
---
Key: protocol-buffers
Value: Protocol Buffers are a language-neutral, platform-neutral extensible mechanism for serializing structured data.
Notes: |-
    It’s like JSON, except it’s smaller and faster, and it generates native language bindings. You define how you want your data to be structured once, then you can use special generated source code to easily write and read your structured data to and from a variety of data streams and using a variety of languages.

    Protocol buffers are a combination of the definition language (created in .proto files), the code that the proto compiler generates to interface with data, language-specific runtime libraries, the serialization format for data that is written to a file (or sent across a network connection), and the serialized data.
Category: concept
Reference: https://protobuf.dev/overview/
Namespace: default
Tags:
    - protocol
    - buffers
    - grpc
    - serializing
    - language
    - modeling
---
Key: grpc.io
Value: https://grpc.io
Notes: A high performance, open source universal RPC framework
Category: bookmark
Reference: grpc.io tutorial
Namespace: default
Tags:
    - grpc
    - site
    - resources
    - bookmark
---
Key: rest
Value: REST can be defined as a stateless, layered and cacheable client-server architecture that operates with resources using a uniform command interface based on HTTP verbs. A resource is an entity (such as a document or file) that can be addressed with a unique resource locator (URL).
Notes: |-
    REST (REpresentational State Transfer) is arguably the most discussed API architecture style, and certainly one of the most used.

    The strongest REST convention is to use a URL to express the resource you're working with, and a HTTP verb to express the action to take.

    REST aims to follow HTTP semantics closely: a REST request is structured like an HTTP request
Category: concept
Reference: https://algodaily.com/lessons/rest-rpc-and-distributed-api-desig
Namespace: default
Tags:
    - rest
    - protocol
    - representational
    - state
    - architecture
    - style
---
Key: can-gpu-run-llm
Value: https://github.com/RahulSChand/gpu_poor
Notes: Calculates how much GPU memory you need and how much token/s you can get for any LLM & GPU/CPU.
Category: bookmark
Reference: https://rahulschand.github.io/gpu_poor/
Namespace: default
Tags:
    - gpu
    - llm
    - artificial
    - intelligence
    - memory
    - calculator
---
Key: new-go-mux
Value: https://eli.thegreenplace.net/2023/better-http-server-routing-in-go-122
Notes: An exciting proposal is expected to land in Go 1.22 - enhancing the pattern-matching capabilities of the default HTTP serving multiplexer in the net/http package.
Category: bookmark
Reference: golang mux
Namespace: default
Tags:
    - golang
    - routes
    - multiplexer
    - mux
    - gorilla
---
Key: kubectl-api-resources
Value: kubectl api-resources
Notes: Print the supported API resources on the server.
Category: command
Reference: kubectl
Namespace: default
Tags:
    - kubectl
    - api
    - resources
    - supported
    - kubernetes
---
Key: deploy-low-latency-apps-aws
Value: https://aws.amazon.com/tutorials/deploying-low-latency-applications-with-aws-local-zones/
Notes: AWS Local Zones are a type of infrastructure deployment that places compute, storage, database, and other select AWS services close to large population and industry centers, enabling you to deliver applications that require single-digit millisecond latency to end users.
Category: bookmark
Reference: aws
Namespace: default
Tags:
    - low
    - latency
    - aws
    - applications
    - local
    - zones
---
Key: candidate-interview-questions
Value: "Who Would You Define As a Successful Person In This Role? \nWhat Are Your Expectations From The Person In This Job Position?\nCould You Give A Little Overview Of How A Day Goes For A Person In This Position?\nWhat Might Be The Most Challenging Part For This Role?\nWhat Is It That You Like Or Enjoy About The Company?"
Notes: questions to ask to interviewer
Category: concept
Reference: asking questions in interviews
Namespace: default
Tags:
    - interviews
    - questions
    - candidate
    - expectations

---
Key: push-up-back
Value: Would it be okay if we pushed stand up back an hour?
Notes: Pushing something back makes it further away from you. So pushing back an event makes it further away in time, so into the future. Pushing up an event means the event happens at a sooner time
Category: english
Reference: english
Namespace: default
Tags:
    - push
    - back
    - english
    - language
    - idioms
---
Key: grep-with-pattern
Value: grep -E "{PATTERN1}|{PATTERN2}"
Notes: The basic grep syntax when searching multiple patterns in a file includes using the grep command followed by strings and the name of the file or its path.
Category: command
Reference: https://phoenixnap.com/kb/grep-multiple-strings
Namespace: default
Tags:
    - linux
    - grep
    - command
    - grep
    - multiple
    - patterns
    - search
---
Key: cqrs-pattern
Value: CQRS stands for Command and Query Responsibility Segregation, a pattern that separates read and update operations for a data store. Implementing CQRS in your application can maximize its performance, scalability, and security.
Notes: |-
    So, what’s the best way to get started using the CQRS patterns in your microservices architecture? First, clearly define the Commands and Queries specific to your application or service. Understanding which operations will modify the state and which will only read data is essential.

    Next, you should design separate Command and Query Models tailored to your application's operational needs. This involves optimizing each model to ensure it can function effectively within the system.

    The CQRS pattern works well with the Event Sourcing patterns, so you should consider adopting an Event Store to capture all changes in your systems as a series of events.
Category: concept
Reference: https://martinfowler.com/bliki/CQRS.html
Namespace: default
Tags:
    - cqrs
    - pattern
    - microservices
    - command
    - query
    - responsibility
    - segretation
---
Key: salt-pwd-bcrypt
Value: https://www.gregorygaines.com/blog/how-to-properly-hash-and-salt-passwords-in-golang-bcrypt/
Notes: How to Properly Hash and Salt Passwords in Golang Using Bcrypt. The bcypt function is secure and brute force resistant allowing programmers to safely handle the passwords of their users. Bcrypt uses a concept named cost which represents the number of hash iterations that bcrypt undertakes. Hashing time is calculated as 2 ^ cost and the higher the cost, the longer the hashing process takes.
Category: bookmark
Reference: Gregory Gaines
Namespace: default
Tags:
    - password
    - encrypt
    - hash
    - bcrypt
    - cost
---
Key: pgcrypto
Value: https://github.com/leg100/pggen/tree/main/example/pgcrypto
Notes: |-
    how to use pgcrypto with samples
    INSERT INTO "user" (email, pass) VALUES ($1, crypt($2, gen_salt('bf')));
Category: bookmark
Reference: pgcrypto
Namespace: default
Tags:
    - encrypt
    - hash
    - pgcrypto
    - database
    - postgresql
---
Key: dependabot
Value: https://github.com/dependabot
Notes: GitHub feature that automates the process of updating dependencies in a repository. It helps developers keep their dependencies up-to-date and secure by submitting pull requests (PRs) to update outdated or vulnerable dependencies.
Category: bookmark
Reference: github
Namespace: default
Tags:
    - github
    - dependencies
    - bot
    - feature
    - pipeline
---
Key: resume-io
Value: https://resume.io
Notes: to build resumes, good GUI
Category: bookmark
Reference: internet
Namespace: default
Tags:
    - resume
    - curriculum
    - builder
    - profile
---
Key: spiffe-id-workloads
Value: https://spiffe.io/
Notes: SPIFFE and SPIRE provide a uniform identity control plane across modern and heterogeneous infrastructure. Since software and application architectures have grown substantially, they are spread across virtual machines in public clouds and private data centers. Security models for the organizations that manage them must keep up with these infrastructure technologies. And this is where SPIFFE and SPIRE come in. With SPIFFE/SPIRE, developers and operators can build software using new infrastructure technologies, while allowing security teams to step back from time-consuming security processes.
Category: bookmark
Reference: project
Namespace: default
Tags:
    - spire
    - spiffe
    - identity
    - oauth
    - control
    - plane
    - stosgale
    - security
---
Key: spire-docker-compose
Value: https://github.com/spiffe/spire-tutorials/tree/main/docker-compose/federation
Notes: This tutorial shows how to authenticate two SPIFFE-identified workloads that are identified by two different SPIRE Servers.
Category: bookmark
Reference: chauncey
Namespace: default
Tags:
    - spire
    - spiffe
    - identity
    - oauth
    - security
    - examples
    - docker
    - compose
---
Key: dijkstra-bugs-presence
Value: Testing shows the presence, not the absence of bugs
Notes: ""
Category: quote
Reference: Edsger W. Dijkstra
Namespace: default
Tags:
    - testing
    - bugs
    - dijkstra
    - presence
    - tdd
    - software
    - development
---
Key: eric-graceful-termination
Value: https://github.com/integrii/go-k8s-graceful-termination
Notes: This is an example Go appliation and self-paced tutorial for implementing the graceful shutdown of Kubernetes pods. This Go application does not drop connections when terminating due to proper shutdown signal trapping. If your app does not capture shutdown signals properly today, your service probably drops connections for users when your pods are re-deployed or removed for any reason.
Category: bookmark
Reference: eric greer repo
Namespace: default
Tags:
    - graceful
    - termination
    - shutdown
    - code
    - eric
    - greer
---
Key: sqlite-bench-go
Value: https://github.com/cvilsmeier/go-sqlite-bench
Notes: Benchmarks for Golang SQLite Drivers
Category: bookmark
Reference: internet
Namespace: default
Tags:
    - sqlite
    - drivers
    - golang
    - benchmark
---
Key: optimize-go-test-parallesim
Value: https://threedots.tech/post/go-test-parallelism/
Notes: Recently, I struggled for a couple of hours to understand why the API tests of one project were slow. In theory, we designed tests to run in a fully parallel way – the duration of tests should be close to the longest-running test. Unfortunately, the reality was different. Tests took 7x longer than the slowest test without using 100% available resources.
Category: bookmark
Reference: Robert Laszczak
Namespace: default
Tags:
    - golang
    - testing
    - parallesim
    - performance
    - practices
---
Key: k3s-lightweight
Value: https://k3s.io
Notes: The certified Kubernetes distribution built for IoT & Edge computing
Category: bookmark
Reference: chaparro
Namespace: default
Tags:
    - kubernetes
    - lightweight
    - edge
    - computing
    - iot
---
Key: edge-computing
Value: Edge computing is a distributed computing framework that brings enterprise applications closer to data sources such as IoT devices or local edge servers.
Notes: Sending all device-generated data to a centralized data center or to the cloud causes bandwidth and latency issues. Edge computing offers a more efficient alternative; data is processed and analyzed closer to the point where it's created. Because data does not traverse over a network to a cloud or data center to be processed, latency is reduced. Edge computing—and mobile edge computing on 5G networks—enables faster and more comprehensive data analysis, creating the opportunity for deeper insights, faster response times and improved customer experiences.
Category: concept
Reference: https://www.ibm.com/topics/edge-computing
Namespace: default
Tags:
    - edge
    - computing
    - iot
    - devices
    - process
---
Key: sqlitebrowser
Value: https://sqlitebrowser.org
Notes: DB Browser for SQLite (DB4S) is a high quality, visual, open source tool designed for people who want to create, search, and edit SQLite or SQLCipher database files.
Category: bookmark
Reference: sqlite
Namespace: default
Tags:
    - sqlite
    - browser
    - viewer
    - database
    - visualizer
---
Key: otel-collector-configuration
Value: https://opentelemetry.io/docs/collector/configuration
Notes: |-
    You can configure the OpenTelemetry Collector to suit your observability needs. Before you learn how Collector configuration works.

    The OpenTelemetry Collector is a vendor-agnostic proxy that can receive, process, and export telemetry data. It supports receiving telemetry data in multiple formats (for example, OTLP, Jaeger, Prometheus, as well as many commercial/proprietary tools) and sending data to one or more backends. It also supports processing and filtering telemetry data before it gets exported.
Category: bookmark
Reference: Open Telemetry
Namespace: default
Tags:
    - telemetry
    - open
    - collector
    - configuration
    - agent
---
Key: sqlx-go-library
Value: https://github.com/jmoiron/sqlx
Notes: |-
    sqlx is a library which provides a set of extensions on go's standard database/sql library. The sqlx versions of sql.DB, sql.TX, sql.Stmt, et al. all leave the underlying interfaces untouched, so that their interfaces are a superset on the standard ones.

    Marshal rows into structs (with embedded struct support), maps, and slices
    Named parameter support including prepared statements
    Get and Select to go quickly from query to struct/slice
Category: bookmark
Reference: ardan labs - robust tx in go
Namespace: default
Tags:
    - library
    - golang
    - sqlx
    - marshal
---
Key: devops-sre-quote
Value: SRE is what happens when you ask Software Engineers to solve operational problems
Notes: ""
Category: quote
Reference: Ben Treynor Sloss
Namespace: default
Tags:
    - devops
    - site
    - reliability
    - practices
    - operational
    - problems
    - solve
---
Key: reliability-hidalgo
Value: People ofte conflate reliability with availability, but they are very different things. Because a service can be available and no reliable
Notes: tech lead journal
Category: quote
Reference: Alex Hidalgo
Namespace: default
Tags:
    - reliability
    - availability
    - confusion
    - differences

---
Key: reliability-hidalgo-2
Value: Is this system performing how it was defined to perform? is it doing what it needs to be doing?
Notes: questions related to reliability. Tech Lead Journal
Category: quote
Reference: Alex Hidalgo
Namespace: default
Tags:
    - reliability
    - questions
    - hidalgo
    - journal
---
Key: techleadjournal
Value: https://techleadjournal.dev
Notes: Great technical leadership requires more than just great coding skills. It requires a variety of other skills that are not well-defined, and they are not something that we can fully learn in any school or book. Hear from experienced technical leaders sharing their journey and philosophy for building great technical teams and achieving technical excellence. Find out what makes them great and how to apply those lessons to your work and team.
Category: bookmark
Reference: Henry Suryawirawan
Namespace: default
Tags:
    - techlead
    - journal
    - bookmark
    - suryawirawan
    - podcast
---
Key: reliability-hidalgo-3
Value: a service is anything that's doing something for something else, reliability means, are you doing that well enough?
Notes: reliability tech journal
Category: quote
Reference: Alex Hidalgo
Namespace: default
Tags:
    - reliability
    - hidalgo
    - techlead
---
Key: reliability-hidalgo-4
Value: You dont get to decide what your reliability is. If your customers, if your user, anyone who depends on you thinks you're being unreliable, you are. If you're not meeting the needs of your users, you're not being reliable.
Notes: reliability tech lead journal
Category: quote
Reference: Alex Hidalgo
Namespace: default
Tags:
    - reliability
    - hidalgo
    - quote
    - reliable
    - customers
---
Key: reliability-hidalgo-5
Value: nothing is ever 100% reliable. don't aim for it. Things fail. People are actually fine with failure, as long as failure does not happen too often
Notes: reliability tech lead journal
Category: quote
Reference: Alex Hidalgo
Namespace: default
Tags:
    - reliability
    - failures
    - hidalgo
    - techlead
    - journal
    - podcast
---
Key: reliability-hidalgo-6
Value: if you want to ensure that you're being more reliable, you need to ensure you're having fewer failures
Notes: reliability
Category: quote
Reference: Alex Hidalgo
Namespace: default
Tags:
    - reliability
    - hidalgo
    - fewer
    - failures
    - podcast
    - techlead
    - journal
---
Key: management-quote
Value: The captain can't be at the level of detail. But the captain can say "I expect the deck to be clean" he does not have to say how
Notes: tech lead journal
Category: quote
Reference: tech lead journal
Namespace: default
Tags:
    - management
    - orders
    - goals
    - detail
    - captain
---
Key: software-mancuso-1
Value: well crafted software is code that we are not scared to change
Notes: tech lead journal
Category: quote
Reference: Sandro Mancuso
Namespace: default
Tags:
    - software
    - craftmanship
    - practice
    - mancuso
    - change
    - techlead
---
Key: software-mancuso-2
Value: Another modernization business driver is innovation if you have a streamlined process, your software, your systems and infra is all aligned, you can innovate faster.
Notes: techlead journal
Category: quote
Reference: Sandro Mancuso
Namespace: default
Tags:
    - software
    - craftmanship
    - practices
    - mancuso
    - techlead
    - journal
---
Key: software-fowler-1
Value: Any fool can write code that a computer can understand. Good programmers write code that people can understand.
Notes: refactoring book
Category: quote
Reference: Martin Fowler
Namespace: default
Tags:
    - refactoring
    - writing
    - programming
    - understand
---
Key: complexity-quote-1
Value: A computer can easily juggle 10000 things at the same time, and the human brain can juggle maybe 6 or 7 things (5 +/- 2 -- rabbits). So the guiding principle then becomes to see if you can write code that takes into account not the memory limit of the computer, but the memory limit of the reader.
Notes: tech lead journal
Category: quote
Reference: Mark Seeman
Namespace: default
Tags:
    - human
    - complexity
    - theory
    - mark
    - seeman
    - techlead
---
Key: rest-api-zalando
Value: https://github.com/zalando/restful-api-guidelines
Notes: Great RESTful APIs look like they were designed by a single team. This promotes API adoption, reduces friction, and enables clients to use them properly. To build APIs that meet this standard, and to answer many common questions encountered along the way of RESTful API development, the Zalando Tech team has created this comprehensive set of guidelines. We have shared it with you to inspire additional discussion and refinement within and among your teams, and contribute our learnings and suggestions to the tech community at large.
Category: bookmark
Reference: zalando
Namespace: default
Tags:
    - zalando
    - restful
    - apis
    - guidelines
    - comprehensive
---
Key: chmod-calculator
Value: https://chmod-calculator.com/
Notes: An awesome Chmod Calculator to convert Linux file permissions between different formats.
Category: bookmark
Reference: linux
Namespace: default
Tags:
    - linux
    - command
    - chmod
    - calculator
    - generator
    - permissions

